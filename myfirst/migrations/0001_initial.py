# Generated by Django 4.0.4 on 2022-06-05 19:37

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Lanes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Enter Lane's Name", max_length=50, unique=True, verbose_name='Lane Name')),
                ('abbr', models.CharField(help_text='Enter Abbreviation', max_length=3, unique=True, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Lane Name Abbreviation')),
            ],
        ),
        migrations.CreateModel(
            name='Legacy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Enter Legacy's Name", max_length=50, unique=True, verbose_name='Legacy Name')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Champion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Enter Champion's Name", max_length=50, unique=True, verbose_name='Champion Name')),
                ('champ_Class', models.CharField(choices=[('Controller', 'Controller'), ('Enchanter', 'Enchanter'), ('Catcher', 'Catcher'), ('Fighter', 'Fighter'), ('Juggernaut', 'Juggernaut'), ('Diver', 'Diver'), ('Mage', 'Mage'), ('Burst', 'Burst'), ('Battlemage', 'Battlemage'), ('Artillery', 'Artillery'), ('Marksman', 'Marksman'), ('Slayer', 'Slayer'), ('Assassin', 'Assassin'), ('Skirmisher', 'Skirmisher'), ('Tank', 'Tank'), ('Vanguard', 'Vanguard'), ('Warden', 'Warden'), ('Specialist', 'Specialist')], max_length=20, verbose_name="Choose Champion's Class")),
                ('range_type', models.CharField(choices=[('Melee', 'Melee'), ('Ranged', 'Ranged'), ('Hybrid', 'Hybrid')], max_length=20, verbose_name='Choose Range Type')),
                ('lanes', models.ManyToManyField(help_text='Choose Playable Lanes', to='myfirst.lanes')),
                ('legacy', models.ManyToManyField(help_text="Choose Champion's Legacys", to='myfirst.legacy')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
    ]
